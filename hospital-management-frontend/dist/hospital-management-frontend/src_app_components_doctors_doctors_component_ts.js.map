{"version":3,"file":"src_app_components_doctors_doctors_component_ts.js","mappings":"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","sources":["./src/app/components/doctors/doctors.component.ts","./src/app/components/doctors/doctors.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-doctors',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatMenuModule\r\n  ],\r\n  templateUrl: './doctors.component.html',\r\n  styleUrl: './doctors.component.scss'\r\n})\r\nexport class DoctorsComponent implements OnInit {\r\n  \r\n  displayedColumns: string[] = ['id', 'name', 'specialization', 'department', 'phone', 'email', 'status', 'actions'];\r\n  dataSource: any[] = [];\r\n  filteredDataSource: any[] = [];\r\n  \r\n  doctorForm: FormGroup;\r\n  isAddMode = false;\r\n  selectedDoctor: any = null;\r\n  searchTerm = '';\r\n\r\n  departments = [\r\n    'Cardiology', 'Neurology', 'Orthopedics', 'Pediatrics', \r\n    'Oncology', 'Dermatology', 'Psychiatry', 'Emergency Medicine'\r\n  ];\r\n\r\n  specializations = [\r\n    'Cardiologist', 'Neurologist', 'Orthopedic Surgeon', 'Pediatrician',\r\n    'Oncologist', 'Dermatologist', 'Psychiatrist', 'Emergency Physician'\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.doctorForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      specialization: ['', Validators.required],\r\n      department: ['', Validators.required],\r\n      phone: ['', [Validators.required, Validators.pattern('^[0-9]{10}$')]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      licenseNumber: ['', Validators.required],\r\n      experience: ['', [Validators.required, Validators.min(0)]],\r\n      education: ['', Validators.required],\r\n      address: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadDoctors();\r\n  }\r\n\r\n  loadDoctors(): void {\r\n    // Mock data - replace with actual API call\r\n    this.dataSource = [\r\n      { id: 1, name: 'Dr. John Smith', specialization: 'Cardiologist', department: 'Cardiology', phone: '1234567890', email: 'john.smith@hospital.com', status: 'Active', licenseNumber: 'MD12345', experience: 15, education: 'MBBS, MD Cardiology' },\r\n      { id: 2, name: 'Dr. Sarah Johnson', specialization: 'Neurologist', department: 'Neurology', phone: '9876543210', email: 'sarah.johnson@hospital.com', status: 'Active', licenseNumber: 'MD67890', experience: 12, education: 'MBBS, MD Neurology' },\r\n      { id: 3, name: 'Dr. Mike Brown', specialization: 'Orthopedic Surgeon', department: 'Orthopedics', phone: '5551234567', email: 'mike.brown@hospital.com', status: 'Active', licenseNumber: 'MD11111', experience: 18, education: 'MBBS, MS Orthopedics' },\r\n      { id: 4, name: 'Dr. Emily Wilson', specialization: 'Pediatrician', department: 'Pediatrics', phone: '4449876543', email: 'emily.wilson@hospital.com', status: 'Inactive', licenseNumber: 'MD22222', experience: 8, education: 'MBBS, MD Pediatrics' }\r\n    ];\r\n    this.filteredDataSource = [...this.dataSource];\r\n  }\r\n\r\n  applyFilter(): void {\r\n    if (!this.searchTerm.trim()) {\r\n      this.filteredDataSource = [...this.dataSource];\r\n      return;\r\n    }\r\n    \r\n    this.filteredDataSource = this.dataSource.filter(doctor =>\r\n      doctor.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n      doctor.specialization.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n      doctor.department.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n      doctor.email.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n    );\r\n  }\r\n\r\n  openAddDialog(): void {\r\n    this.isAddMode = true;\r\n    this.selectedDoctor = null;\r\n    this.doctorForm.reset();\r\n  }\r\n\r\n  openEditDialog(doctor: any): void {\r\n    this.isAddMode = false;\r\n    this.selectedDoctor = doctor;\r\n    this.doctorForm.patchValue(doctor);\r\n  }\r\n\r\n  saveDoctor(): void {\r\n    if (this.doctorForm.valid) {\r\n      const doctorData = this.doctorForm.value;\r\n      \r\n      if (this.isAddMode) {\r\n        // Add new doctor\r\n        const newDoctor = {\r\n          ...doctorData,\r\n          id: this.dataSource.length + 1,\r\n          status: 'Active'\r\n        };\r\n        this.dataSource.push(newDoctor);\r\n        this.snackBar.open('Doctor added successfully!', 'Close', { duration: 3000 });\r\n      } else {\r\n        // Update existing doctor\r\n        const index = this.dataSource.findIndex(d => d.id === this.selectedDoctor.id);\r\n        if (index !== -1) {\r\n          this.dataSource[index] = { ...this.selectedDoctor, ...doctorData };\r\n          this.snackBar.open('Doctor updated successfully!', 'Close', { duration: 3000 });\r\n        }\r\n      }\r\n      \r\n      this.loadDoctors();\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n  deleteDoctor(doctor: any): void {\r\n    if (confirm(`Are you sure you want to delete ${doctor.name}?`)) {\r\n      const index = this.dataSource.findIndex(d => d.id === doctor.id);\r\n      if (index !== -1) {\r\n        this.dataSource.splice(index, 1);\r\n        this.loadDoctors();\r\n        this.snackBar.open('Doctor deleted successfully!', 'Close', { duration: 3000 });\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.selectedDoctor = null;\r\n    this.doctorForm.reset();\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    return status === 'Active' ? 'success' : 'warn';\r\n  }\r\n\r\n  getDepartmentColor(department: string): string {\r\n    const colors = ['primary', 'accent', 'warn', 'success'];\r\n    const index = this.departments.indexOf(department);\r\n    return colors[index % colors.length];\r\n  }\r\n}\r\n\r\n","<div class=\"doctors-container\">\r\n  <h1>Doctors Management</h1>\r\n  <p>Manage doctor profiles and specializations</p>\r\n</div>\r\n\r\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","MatCardModule","MatTableModule","MatButtonModule","MatIconModule","MatInputModule","MatFormFieldModule","MatSelectModule","MatChipsModule","MatMenuModule","DoctorsComponent","constructor","fb","snackBar","displayedColumns","dataSource","filteredDataSource","isAddMode","selectedDoctor","searchTerm","departments","specializations","doctorForm","group","name","required","specialization","department","phone","pattern","email","licenseNumber","experience","min","education","address","ngOnInit","loadDoctors","id","status","applyFilter","trim","filter","doctor","toLowerCase","includes","openAddDialog","reset","openEditDialog","patchValue","saveDoctor","valid","doctorData","value","newDoctor","length","push","open","duration","index","findIndex","d","closeDialog","deleteDoctor","confirm","splice","getStatusColor","getDepartmentColor","colors","indexOf","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","MatSnackBar","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DoctorsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}