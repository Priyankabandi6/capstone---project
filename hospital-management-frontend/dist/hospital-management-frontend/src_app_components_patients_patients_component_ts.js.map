{"version":3,"file":"src_app_components_patients_patients_component_ts.js","mappings":"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","sources":["./src/app/components/patients/patients.component.ts","./src/app/components/patients/patients.component.html","./node_modules/@angular/cdk/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs","./node_modules/@angular/material/fesm2022/sort.mjs","./node_modules/@angular/material/fesm2022/tooltip.mjs"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort } from '@angular/material/sort';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-patients',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatChipsModule,\n    MatMenuModule,\n    MatSnackBarModule\n  ],\n  templateUrl: './patients.component.html',\n  styleUrl: './patients.component.scss'\n})\nexport class PatientsComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  displayedColumns: string[] = ['id', 'name', 'age', 'gender', 'phone', 'email', 'status', 'actions'];\n  dataSource: any[] = [];\n  filteredDataSource: any[] = [];\n  \n  patientForm: FormGroup;\n  isAddMode = false;\n  selectedPatient: any = null;\n  searchTerm = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {\n    this.patientForm = this.fb.group({\n      name: ['', Validators.required],\n      age: ['', [Validators.required, Validators.min(0), Validators.max(150)]],\n      gender: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern('^[0-9]{10}$')]],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', Validators.required],\n      bloodGroup: [''],\n      emergencyContact: [''],\n      medicalHistory: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadPatients();\n  }\n\n  loadPatients(): void {\n    // Mock data - replace with actual API call\n    this.dataSource = [\n      { id: 1, name: 'John Doe', age: 35, gender: 'Male', phone: '1234567890', email: 'john@example.com', status: 'Active', bloodGroup: 'O+', address: '123 Main St' },\n      { id: 2, name: 'Jane Smith', age: 28, gender: 'Female', phone: '9876543210', email: 'jane@example.com', status: 'Active', bloodGroup: 'A+', address: '456 Oak Ave' },\n      { id: 3, name: 'Mike Wilson', age: 42, gender: 'Male', phone: '5551234567', email: 'mike@example.com', status: 'Inactive', bloodGroup: 'B+', address: '789 Pine Rd' },\n      { id: 4, name: 'Sarah Davis', age: 31, gender: 'Female', phone: '4449876543', email: 'sarah@example.com', status: 'Active', bloodGroup: 'AB+', address: '321 Elm St' }\n    ];\n    this.filteredDataSource = [...this.dataSource];\n  }\n\n  applyFilter(): void {\n    if (!this.searchTerm.trim()) {\n      this.filteredDataSource = [...this.dataSource];\n      return;\n    }\n    \n    this.filteredDataSource = this.dataSource.filter(patient =>\n      patient.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n      patient.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n      patient.phone.includes(this.searchTerm)\n    );\n  }\n\n  openAddDialog(): void {\n    this.isAddMode = true;\n    this.selectedPatient = null;\n    this.patientForm.reset();\n  }\n\n  openEditDialog(patient: any): void {\n    this.isAddMode = false;\n    this.selectedPatient = patient;\n    this.patientForm.patchValue(patient);\n  }\n\n  savePatient(): void {\n    if (this.patientForm.valid) {\n      const patientData = this.patientForm.value;\n      \n      if (this.isAddMode) {\n        // Add new patient\n        const newPatient = {\n          ...patientData,\n          id: this.dataSource.length + 1,\n          status: 'Active'\n        };\n        this.dataSource.push(newPatient);\n        this.snackBar.open('Patient added successfully!', 'Close', { duration: 3000 });\n      } else {\n        // Update existing patient\n        const index = this.dataSource.findIndex(p => p.id === this.selectedPatient.id);\n        if (index !== -1) {\n          this.dataSource[index] = { ...this.selectedPatient, ...patientData };\n          this.snackBar.open('Patient updated successfully!', 'Close', { duration: 3000 });\n        }\n      }\n      \n      this.loadPatients();\n      this.closeDialog();\n    }\n  }\n\n  deletePatient(patient: any): void {\n    if (confirm(`Are you sure you want to delete ${patient.name}?`)) {\n      const index = this.dataSource.findIndex(p => p.id === patient.id);\n      if (index !== -1) {\n        this.dataSource.splice(index, 1);\n        this.loadPatients();\n        this.snackBar.open('Patient deleted successfully!', 'Close', { duration: 3000 });\n      }\n    }\n  }\n\n  closeDialog(): void {\n    this.selectedPatient = null;\n    this.patientForm.reset();\n  }\n\n  getStatusColor(status: string): string {\n    return status === 'Active' ? 'success' : 'warn';\n  }\n}\n","<div class=\"patients-container\">\r\n  <!-- Header Section -->\r\n  <div class=\"header-section mb-4\">\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-md-6\">\r\n        <h1 class=\"page-title\">\r\n          <mat-icon class=\"me-2\">people</mat-icon>\r\n          Patient Management\r\n        </h1>\r\n        <p class=\"page-subtitle\">Manage patient records and information</p>\r\n      </div>\r\n      <div class=\"col-md-6 text-md-end\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"openAddDialog()\">\r\n          <mat-icon class=\"me-2\">add</mat-icon>\r\n          Add New Patient\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search and Filter Section -->\r\n  <mat-card class=\"mb-4\">\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n            <mat-label>Search Patients</mat-label>\r\n            <input matInput \r\n                   [(ngModel)]=\"searchTerm\" \r\n                   (input)=\"applyFilter()\"\r\n                   placeholder=\"Search by name, email, or phone\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"d-flex gap-2\">\r\n            <button mat-stroked-button>\r\n              <mat-icon class=\"me-2\">filter_list</mat-icon>\r\n              Filter\r\n            </button>\r\n            <button mat-stroked-button>\r\n              <mat-icon class=\"me-2\">download</mat-icon>\r\n              Export\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <!-- Patients Table -->\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <div class=\"table-responsive\">\r\n        <table mat-table [dataSource]=\"filteredDataSource\" matSort class=\"w-100\">\r\n          <!-- ID Column -->\r\n          <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\r\n            <td mat-cell *matCellDef=\"let patient\">{{patient.id}}</td>\r\n          </ng-container>\r\n\r\n          <!-- Name Column -->\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n            <td mat-cell *matCellDef=\"let patient\">\r\n              <div class=\"patient-name\">\r\n                <strong>{{patient.name}}</strong>\r\n                <small class=\"text-muted d-block\">{{patient.bloodGroup}}</small>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Age Column -->\r\n          <ng-container matColumnDef=\"age\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Age</th>\r\n            <td mat-cell *matCellDef=\"let patient\">{{patient.age}} yrs</td>\r\n          </ng-container>\r\n\r\n          <!-- Gender Column -->\r\n          <ng-container matColumnDef=\"gender\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Gender</th>\r\n            <td mat-cell *matCellDef=\"let patient\">\r\n              <mat-chip [color]=\"patient.gender === 'Male' ? 'primary' : 'accent'\" selected>\r\n                {{patient.gender}}\r\n              </mat-chip>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Phone Column -->\r\n          <ng-container matColumnDef=\"phone\">\r\n            <th mat-header-cell *matHeaderCellDef>Phone</th>\r\n            <td mat-cell *matCellDef=\"let patient\">{{patient.phone}}</td>\r\n          </ng-container>\r\n\r\n          <!-- Email Column -->\r\n          <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef>Email</th>\r\n            <td mat-cell *matCellDef=\"let patient\">{{patient.email}}</td>\r\n          </ng-container>\r\n\r\n          <!-- Status Column -->\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\r\n            <td mat-cell *matCellDef=\"let patient\">\r\n              <mat-chip [color]=\"getStatusColor(patient.status)\" selected>\r\n                {{patient.status}}\r\n              </mat-chip>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Actions Column -->\r\n          <ng-container matColumnDef=\"actions\">\r\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n            <td mat-cell *matCellDef=\"let patient\">\r\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                <mat-icon>more_vert</mat-icon>\r\n              </button>\r\n              <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"openEditDialog(patient)\">\r\n                  <mat-icon>edit</mat-icon>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button mat-menu-item (click)=\"deletePatient(patient)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                  <span>Delete</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>visibility</mat-icon>\r\n                  <span>View Details</span>\r\n                </button>\r\n              </mat-menu>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Pagination -->\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" \r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of patients\">\r\n      </mat-paginator>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <!-- Patient Form Dialog -->\r\n  <div class=\"modal\" *ngIf=\"selectedPatient !== null || isAddMode\" (click)=\"closeDialog()\">\r\n    <div class=\"modal-content\" (click)=\"$event.stopPropagation()\">\r\n      <div class=\"modal-header\">\r\n        <h3>{{isAddMode ? 'Add New Patient' : 'Edit Patient'}}</h3>\r\n        <button mat-icon-button (click)=\"closeDialog()\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n      \r\n      <form [formGroup]=\"patientForm\" (ngSubmit)=\"savePatient()\">\r\n        <div class=\"modal-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Full Name</mat-label>\r\n                <input matInput formControlName=\"name\" placeholder=\"Enter full name\">\r\n                <mat-error *ngIf=\"patientForm.get('name')?.hasError('required')\">\r\n                  Name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Age</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"age\" placeholder=\"Enter age\">\r\n                <mat-error *ngIf=\"patientForm.get('age')?.hasError('required')\">\r\n                  Age is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"patientForm.get('age')?.hasError('min') || patientForm.get('age')?.hasError('max')\">\r\n                  Age must be between 0 and 150\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Gender</mat-label>\r\n                <mat-select formControlName=\"gender\">\r\n                  <mat-option value=\"Male\">Male</mat-option>\r\n                  <mat-option value=\"Female\">Female</mat-option>\r\n                  <mat-option value=\"Other\">Other</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"patientForm.get('gender')?.hasError('required')\">\r\n                  Gender is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Blood Group</mat-label>\r\n                <mat-select formControlName=\"bloodGroup\">\r\n                  <mat-option value=\"A+\">A+</mat-option>\r\n                  <mat-option value=\"A-\">A-</mat-option>\r\n                  <mat-option value=\"B+\">B+</mat-option>\r\n                  <mat-option value=\"B-\">B-</mat-option>\r\n                  <mat-option value=\"AB+\">AB+</mat-option>\r\n                  <mat-option value=\"AB-\">AB-</mat-option>\r\n                  <mat-option value=\"O+\">O+</mat-option>\r\n                  <mat-option value=\"O-\">O-</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Phone Number</mat-label>\r\n                <input matInput formControlName=\"phone\" placeholder=\"Enter phone number\">\r\n                <mat-error *ngIf=\"patientForm.get('phone')?.hasError('required')\">\r\n                  Phone number is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"patientForm.get('phone')?.hasError('pattern')\">\r\n                  Please enter a valid 10-digit phone number\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"email\" placeholder=\"Enter email\">\r\n                <mat-error *ngIf=\"patientForm.get('email')?.hasError('required')\">\r\n                  Email is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"patientForm.get('email')?.hasError('email')\">\r\n                  Please enter a valid email address\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Address</mat-label>\r\n                <textarea matInput formControlName=\"address\" rows=\"3\" placeholder=\"Enter address\"></textarea>\r\n                <mat-error *ngIf=\"patientForm.get('address')?.hasError('required')\">\r\n                  Address is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Emergency Contact</mat-label>\r\n                <input matInput formControlName=\"emergencyContact\" placeholder=\"Enter emergency contact\">\r\n              </mat-form-field>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Medical History</mat-label>\r\n                <textarea matInput formControlName=\"medicalHistory\" rows=\"2\" placeholder=\"Enter medical history\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button mat-button type=\"button\" (click)=\"closeDialog()\">Cancel</button>\r\n          <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"patientForm.invalid\">\r\n            {{isAddMode ? 'Add Patient' : 'Update Patient'}}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Optional CSS class or classes applied to the overlay panel. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Optional CSS class or classes applied to the overlay backdrop. */\n        this.backdropClass = '';\n        /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Dialog label applied via `aria-label` */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the previously-focused element upon closing.\n         * Has the following behavior based on the type that is passed in:\n         * - `boolean` - when true, will return focus to the element that was focused before the dialog\n         *    was opened, otherwise won't restore focus at all.\n         * - `string` - focus will be restored to the first element that matches the CSS selector.\n         * - `HTMLElement` - focus will be restored to the specific element.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user navigates backwards or forwards through browser\n         * history. This does not apply to navigation via anchor element unless using URL-hash based\n         * routing (`HashLocationStrategy` in the Angular router).\n         */\n        this.closeOnNavigation = true;\n        /**\n         * Whether the dialog should close when the dialog service is destroyed. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead.\n         */\n        this.closeOnDestroy = true;\n        /**\n         * Whether the dialog should close when the underlying overlay is detached. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n         * external detachment can happen as a result of a scroll strategy triggering it or when the\n         * browser location changes.\n         */\n        this.closeOnOverlayDetachments = true;\n    }\n}\n\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._overlayRef = _overlayRef;\n        this._focusMonitor = _focusMonitor;\n        this._platform = inject(Platform);\n        /** The class that traps and manages focus within the dialog. */\n        this._focusTrap = null;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Queue of the IDs of the dialog's label element, based on their definition order. The first\n         * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n         * where there are two or more titles in the DOM at a time and the first one is destroyed while\n         * the rest are present.\n         */\n        this._ariaLabelledByQueue = [];\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwDialogContentAlreadyAttachedError();\n            }\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._contentAttached();\n            return result;\n        };\n        this._document = _document;\n        if (this._config.ariaLabelledBy) {\n            this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n        }\n    }\n    _addAriaLabelledBy(id) {\n        this._ariaLabelledByQueue.push(id);\n        this._changeDetectorRef.markForCheck();\n    }\n    _removeAriaLabelledBy(id) {\n        const index = this._ariaLabelledByQueue.indexOf(id);\n        if (index > -1) {\n            this._ariaLabelledByQueue.splice(index, 1);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._handleBackdropClicks();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap?.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            // Save the previously focused element. This element will be re-focused\n            // when the dialog closes.\n            if (this._document) {\n                this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n            }\n        }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n        // Clicking on the backdrop will move focus out of dialog.\n        // Recapture it if closing via the backdrop is disabled.\n        this._overlayRef.backdropClick().subscribe(() => {\n            if (this._config.disableClose) {\n                this._recaptureFocus();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: DialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: CdkDialogContainer, isStandalone: true, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DialogConfig]\n                }] }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        /** Emits when the dialog has been closed. */\n        this.closed = new Subject();\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n        });\n        this._detachSubscription = overlayRef.detachments().subscribe(() => {\n            // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n            if (config.closeOnOverlayDetachments !== false) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this.containerInstance) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n            // Drop the detach subscription first since it can be triggered by the\n            // `dispose` call and override the result of this closing sequence.\n            this._detachSubscription.unsubscribe();\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = { ...defaults, ...config };\n        config.id = config.id || `cdk-dialog-${uniqueId++}`;\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = this._overlay.create(overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }), config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = {\n                    ...context,\n                    ...(typeof config.templateContext === 'function'\n                        ? config.templateContext()\n                        : config.templateContext),\n                };\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentRef = contentRef;\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, { optional: true }))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Dialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: DEFAULT_DIALOG_CONFIG, optional: true }, { token: Dialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: DIALOG_SCROLL_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Dialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: DialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEFAULT_DIALOG_CONFIG]\n                }] }, { type: Dialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DIALOG_SCROLL_STRATEGY]\n                }] }] });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\nclass DialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer], exports: [\n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule,\n            CdkDialogContainer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, providers: [Dialog], imports: [OverlayModule, PortalModule, A11yModule, \n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    providers: [Dialog],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, InjectionToken, inject, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, _animationMode, focusMonitor) {\n        super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n        this._animationMode = _animationMode;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Whether animations are enabled. */\n        this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n        /** Number of actions projected in the dialog. */\n        this._actionSectionCount = 0;\n        /** Host element of the dialog container component. */\n        this._hostElement = this._elementRef.nativeElement;\n        /** Duration of the dialog open animation. */\n        this._enterAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION\n            : 0;\n        /** Duration of the dialog close animation. */\n        this._exitAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION\n            : 0;\n        /** Current timer for dialog animations. */\n        this._animationTimer = null;\n        /**\n         * Completes the dialog open by clearing potential animation classes, trapping\n         * focus and emitting an opened event.\n         */\n        this._finishDialogOpen = () => {\n            this._clearAnimationClasses();\n            this._openAnimationDone(this._enterAnimationDuration);\n        };\n        /**\n         * Completes the dialog close by clearing potential animation classes, restoring\n         * focus and emitting a closed event.\n         */\n        this._finishDialogClose = () => {\n            this._clearAnimationClasses();\n            this._animationStateChanged.emit({ state: 'closed', totalTime: this._exitAnimationDuration });\n        };\n    }\n    _contentAttached() {\n        // Delegate to the original dialog-container initialization (i.e. saving the\n        // previous element, setting up the focus trap and moving focus to the container).\n        super._contentAttached();\n        // Note: Usually we would be able to use the MDC dialog foundation here to handle\n        // the dialog animation for us, but there are a few reasons why we just leverage\n        // their styles and not use the runtime foundation code:\n        //   1. Foundation does not allow us to disable animations.\n        //   2. Foundation contains unnecessary features we don't need and aren't\n        //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n        //   3. Foundation uses unnecessary timers for animations to work around limitations\n        //      in React's `setState` mechanism.\n        //      https://github.com/material-components/material-components-web/pull/3682.\n        this._startOpenAnimation();\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n        this._animationStateChanged.emit({ state: 'opening', totalTime: this._enterAnimationDuration });\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            // One would expect that the open class is added once the animation finished, but MDC\n            // uses the open class in combination with the opening class to start the animation.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n            this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n        }\n        else {\n            this._hostElement.classList.add(OPEN_CLASS);\n            // Note: We could immediately finish the dialog opening here with noop animations,\n            // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n            // Executing this immediately would mean that `afterOpened` emits synchronously\n            // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n            Promise.resolve().then(() => this._finishDialogOpen());\n        }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n        this._animationStateChanged.emit({ state: 'closing', totalTime: this._exitAnimationDuration });\n        this._hostElement.classList.remove(OPEN_CLASS);\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n            this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n        }\n        else {\n            // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n            // set up before any user can subscribe to the backdrop click. The subscription triggers\n            // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n            // animation state event if animations are disabled, the overlay would be disposed\n            // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n            // skipped. We work around this by waiting with the dialog close until the next tick when\n            // all subscriptions have been fired as expected. This is not an ideal solution, but\n            // there doesn't seem to be any other good way. Alternatives that have been considered:\n            //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n            //      Also this issue is specific to the MDC implementation where the dialog could\n            //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n            //      and closing always takes at least a tick.\n            //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n            //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n            //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n            // Based on the fact that this is specific to the MDC-based implementation of the dialog\n            // animations, the defer is applied here.\n            Promise.resolve().then(() => this._finishDialogClose());\n        }\n    }\n    /**\n     * Updates the number action sections.\n     * @param delta Increase/decrease in the number of sections.\n     */\n    _updateActionSectionCount(delta) {\n        this._actionSectionCount += delta;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n        this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n        // Note that we want this timer to run inside the NgZone, because we want\n        // the related events like `afterClosed` to be inside the zone as well.\n        this._animationTimer = setTimeout(callback, duration);\n    }\n    /** Runs a callback in `requestAnimationFrame`, if available. */\n    _requestAnimationFrame(callback) {\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame === 'function') {\n                requestAnimationFrame(callback);\n            }\n            else {\n                callback();\n            }\n        });\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n    }\n    attachComponentPortal(portal) {\n        // When a component is passed into the dialog, the host element interrupts\n        // the `display:flex` from affecting the dialog title, content, and\n        // actions. To fix this, we make the component host `display: contents` by\n        // marking its host with the `mat-mdc-dialog-component-host` class.\n        //\n        // Note that this problem does not exist when a template ref is used since\n        // the title, contents, and actions are then nested directly under the\n        // dialog surface.\n        const ref = super.attachComponentPortal(portal);\n        ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n        return ref;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogContainer, isStandalone: true, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"class._mat-animation-noopable\": \"!_animationsEnabled\", \"class.mat-mdc-dialog-container-with-actions\": \"_actionSectionCount > 0\" }, classAttribute: \"mat-mdc-dialog-container mdc-dialog\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition:opacity linear var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container .mdc-dialog__surface{transition:transform var(--mat-dialog-transition-duration, 0ms) 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container,.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__surface{transition:none}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-title{padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'mat-mdc-dialog-container mdc-dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0',\n                    }, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition:opacity linear var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container .mdc-dialog__surface{transition:transform var(--mat-dialog-transition-duration, 0ms) 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container,.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__surface{transition:none}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-title{padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i1.FocusMonitor }] });\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n    if (time == null) {\n        return null;\n    }\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (time.endsWith('ms')) {\n        return coerceNumberProperty(time.substring(0, time.length - 2));\n    }\n    if (time.endsWith('s')) {\n        return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n    }\n    if (time === '0') {\n        return 0;\n    }\n    return null; // anything else is invalid.\n}\n\nvar MatDialogState;\n(function (MatDialogState) {\n    MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n    MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n    MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_ref, config, _containerInstance) {\n        this._ref = _ref;\n        this._containerInstance = _containerInstance;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = MatDialogState.OPEN;\n        this.disableClose = config.disableClose;\n        this.id = _ref.id;\n        // Used to target panels specifically tied to dialogs.\n        _ref.addPanelClass('mat-mdc-dialog-panel');\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = MatDialogState.CLOSING;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = MatDialogState.CLOSED;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    constructor(_overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, _defaultOptions, _scrollStrategy, _parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._defaultOptions = _defaultOptions;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentDialog = _parentDialog;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this.dialogConfigClass = MatDialogConfig;\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._dialog = injector.get(Dialog);\n        this._dialogRefConstructor = MatDialogRef;\n        this._dialogContainerType = MatDialogContainer;\n        this._dialogDataToken = MAT_DIALOG_DATA;\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = { ...(this._defaultOptions || new MatDialogConfig()), ...config };\n        config.id = config.id || `mat-mdc-dialog-${uniqueId++}`;\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, {\n            ...config,\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true,\n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false,\n            // Disable closing on detachments so that we can sync up the animation.\n            // The Material dialog ref handles this manually.\n            closeOnOverlayDetachments: false,\n            container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: this.dialogConfigClass, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            },\n            templateContext: () => ({ dialogRef }),\n            providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config?.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            },\n        });\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentRef = cdkRef.componentRef;\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                    type: Optional\n                }] }, { type: MatDialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: MatDialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogClose, isStandalone: true, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    standalone: true,\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\nclass MatDialogLayoutSection {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                this._onAdd();\n            });\n        }\n    }\n    ngOnDestroy() {\n        // Note: we null check because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        const instance = this._dialogRef?._containerInstance;\n        if (instance) {\n            Promise.resolve().then(() => {\n                this._onRemove();\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogLayoutSection, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogLayoutSection, isStandalone: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogLayoutSection, decorators: [{\n            type: Directive,\n            args: [{ standalone: true }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }] });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n    constructor() {\n        super(...arguments);\n        this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n    }\n    _onAdd() {\n        // Note: we null check the queue, because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n    }\n    _onRemove() {\n        this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogTitle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogTitle, isStandalone: true, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-dialog-title mdc-dialog__title\" }, exportAs: [\"matDialogTitle\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogContent, isStandalone: true, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-mdc-dialog-content mdc-dialog__content\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-mdc-dialog-content mdc-dialog__content' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n    _onAdd() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n    }\n    _onRemove() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogActions, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogActions, isStandalone: true, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-dialog-actions-align-start\": \"align === \\\"start\\\"\", \"class.mat-mdc-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-mdc-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-dialog-actions mdc-dialog__actions\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n                        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n                        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\nconst DIRECTIVES = [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n];\nclass MatDialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent], exports: [MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatDialog],\n                }]\n        }] });\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n        transition('* => void, * => exit', group([\n            animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n    ]),\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogState, MatDialogTitle, _closeDialogVia, _defaultParams, matDialogAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(value || 0, 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = value || 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(value || 0, 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n        this._updateDisplayedPageSizeOptions();\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._isInitialized = false;\n        this._initializedStream = new ReplaySubject(1);\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        /** Whether to hide the page size selection UI from the user. */\n        this.hidePageSize = false;\n        /** Whether to show the first/last buttons UI to the user. */\n        this.showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Whether the paginator is disabled. */\n        this.disabled = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this.hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this.showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._initializedStream.next();\n    }\n    ngOnDestroy() {\n        this._initializedStream.complete();\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._isInitialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatPaginator, isStandalone: true, selector: \"mat-paginator\", inputs: { color: \"color\", pageIndex: [\"pageIndex\", \"pageIndex\", numberAttribute], length: [\"length\", \"length\", numberAttribute], pageSize: [\"pageSize\", \"pageSize\", numberAttribute], pageSizeOptions: \"pageSizeOptions\", hidePageSize: [\"hidePageSize\", \"hidePageSize\", booleanAttribute], showFirstLastButtons: [\"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute], selectConfig: \"selectConfig\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking);--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: MatSelect, selector: \"mat-select\", inputs: [\"aria-describedby\", \"panelClass\", \"disabled\", \"disableRipple\", \"tabIndex\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip], template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking);--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], length: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastButtons: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectConfig: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n                    exports: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    constructor(_defaultOptions) {\n        this._defaultOptions = _defaultOptions;\n        this._initializedStream = new ReplaySubject(1);\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Whether the sortable is disabled. */\n        this.disabled = false;\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._initializedStream.next();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._initializedStream.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatSort, isStandalone: true, selector: \"[matSort]\", inputs: { active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\", booleanAttribute], disabled: [\"matSortDisabled\", \"disabled\", booleanAttribute] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: [{ alias: 'matSortDisableClear', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matSortDisabled', transform: booleanAttribute }]\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        /** whether the sort header is disabled. */\n        this.disabled = false;\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n        if (this._sortButton) {\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n        }\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatSortHeader, isStandalone: true, selector: \"[mat-sort-header]\", inputs: { id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", disabled: [\"disabled\", \"disabled\", booleanAttribute], sortActionDescription: \"sortActionDescription\", disableClear: [\"disableClear\", \"disableClear\", booleanAttribute] }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], standalone: true, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: () => [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, imports: [MatCommonModule, MatSort, MatSortHeader], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatSort, MatSortHeader],\n                    exports: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Directive, Inject, Optional, Input, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._tooltipComponent = TooltipComponent;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat-mdc';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    const DEFAULT_LONGPRESS_DELAY = 500;\n                    this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), this._defaultOptions.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatTooltip, isStandalone: true, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        /** Name of the show animation and the class that toggles it. */\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        /** Name of the hide animation and the class that toggles it. */\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        if (this._isVisible !== isVisible) {\n            this._isVisible = isVisible;\n            this._changeDetectorRef.markForCheck();\n        }\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: TooltipComponent, isStandalone: true, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, standalone: true, imports: [NgClass], template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","MatCardModule","MatTableModule","MatButtonModule","MatIconModule","MatInputModule","MatFormFieldModule","MatSelectModule","MatDialogModule","MatPaginatorModule","MatPaginator","MatSortModule","MatSort","MatChipsModule","MatMenuModule","MatSnackBarModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","patient_r1","id","patient_r2","name","bloodGroup","ɵɵtextInterpolate1","patient_r3","age","ɵɵproperty","patient_r4","gender","patient_r5","phone","patient_r6","email","ctx_r7","getStatusColor","patient_r7","status","ɵɵlistener","PatientsComponent_td_62_Template_button_click_6_listener","patient_r10","ɵɵrestoreView","_r9","$implicit","ɵɵnextContext","ɵɵresetView","openEditDialog","PatientsComponent_td_62_Template_button_click_11_listener","deletePatient","menu_r11","ɵɵelement","PatientsComponent_div_66_Template_div_click_0_listener","_r12","closeDialog","PatientsComponent_div_66_Template_div_click_1_listener","$event","stopPropagation","PatientsComponent_div_66_Template_button_click_5_listener","PatientsComponent_div_66_Template_form_ngSubmit_8_listener","savePatient","ɵɵtemplate","PatientsComponent_div_66_mat_error_16_Template","PatientsComponent_div_66_mat_error_22_Template","PatientsComponent_div_66_mat_error_23_Template","PatientsComponent_div_66_mat_error_36_Template","PatientsComponent_div_66_mat_error_64_Template","PatientsComponent_div_66_mat_error_65_Template","PatientsComponent_div_66_mat_error_71_Template","PatientsComponent_div_66_mat_error_72_Template","PatientsComponent_div_66_mat_error_79_Template","PatientsComponent_div_66_Template_button_click_92_listener","isAddMode","patientForm","tmp_3_0","get","hasError","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0","tmp_11_0","invalid","PatientsComponent","constructor","fb","dialog","snackBar","displayedColumns","dataSource","filteredDataSource","selectedPatient","searchTerm","group","required","min","max","pattern","address","emergencyContact","medicalHistory","ngOnInit","loadPatients","applyFilter","trim","filter","patient","toLowerCase","includes","openAddDialog","reset","patchValue","valid","patientData","value","newPatient","length","push","open","duration","index","findIndex","p","confirm","splice","ɵɵdirectiveInject","i1","FormBuilder","i2","MatDialog","i3","MatSnackBar","selectors","viewQuery","PatientsComponent_Query","rf","ctx","PatientsComponent_Template_button_click_11_listener","ɵɵtwoWayListener","PatientsComponent_Template_input_ngModelChange_22_listener","ɵɵtwoWayBindingSet","PatientsComponent_Template_input_input_22_listener","ɵɵelementContainerStart","PatientsComponent_th_40_Template","PatientsComponent_td_41_Template","PatientsComponent_th_43_Template","PatientsComponent_td_44_Template","PatientsComponent_th_46_Template","PatientsComponent_td_47_Template","PatientsComponent_th_49_Template","PatientsComponent_td_50_Template","PatientsComponent_th_52_Template","PatientsComponent_td_53_Template","PatientsComponent_th_55_Template","PatientsComponent_td_56_Template","PatientsComponent_th_58_Template","PatientsComponent_td_59_Template","PatientsComponent_th_61_Template","PatientsComponent_td_62_Template","PatientsComponent_tr_63_Template","PatientsComponent_tr_64_Template","PatientsComponent_div_66_Template","ɵɵtwoWayProperty","ɵɵpureFunction0","_c0","i4","NgIf","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","FormGroupDirective","FormControlName","i5","MatCard","MatCardContent","i6","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i7","MatButton","MatIconButton","i8","MatIcon","i9","MatInput","i10","MatFormField","MatLabel","MatError","MatSuffix","i11","MatSelect","i12","MatOption","i13","i14","MatSortHeader","i15","MatChip","i16","MatMenu","MatMenuItem","MatMenuTrigger","styles","A11yModule","i1$1","Overlay","OverlayConfig","OverlayRef","OverlayModule","Platform","_getFocusedElementPierceShadowDom","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","DOCUMENT","inject","ChangeDetectorRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","ViewChild","InjectionToken","Injector","TemplateRef","Injectable","SkipSelf","NgModule","ESCAPE","hasModifierKey","Subject","defer","of","Directionality","startWith","CdkDialogContainer_ng_template_0_Template","DialogConfig","role","panelClass","hasBackdrop","backdropClass","disableClose","width","height","data","ariaDescribedBy","ariaLabelledBy","ariaLabel","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","throwDialogContentAlreadyAttachedError","Error","CdkDialogContainer","_elementRef","_focusTrapFactory","_document","_config","_interactivityChecker","_ngZone","_overlayRef","_focusMonitor","_platform","_focusTrap","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledByQueue","_changeDetectorRef","attachDomPortal","portal","_portalOutlet","hasAttached","ngDevMode","result","_contentAttached","_addAriaLabelledBy","markForCheck","_removeAriaLabelledBy","indexOf","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_trapFocus","ngOnDestroy","_restoreFocus","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_forceFocus","element","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","nativeElement","querySelector","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","focusConfig","focusTargetElement","activeElement","body","contains","focusVia","destroy","isBrowser","create","backdropClick","subscribe","ɵfac","CdkDialogContainer_Factory","t","ElementRef","FocusTrapFactory","InteractivityChecker","NgZone","FocusMonitor","ɵcmp","ɵɵdefineComponent","type","CdkDialogContainer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","CdkDialogContainer_HostBindings","ɵɵattribute","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","CdkDialogContainer_Template","dependencies","encapsulation","ɵsetClassMetadata","args","None","changeDetection","Default","imports","host","undefined","decorators","static","DialogRef","overlayRef","config","closed","keydownEvents","outsidePointerEvents","event","keyCode","preventDefault","close","focusOrigin","_detachSubscription","detachments","containerInstance","closedSubject","unsubscribe","dispose","next","complete","componentInstance","updatePosition","updateSize","addPanelClass","classes","removePanelClass","DIALOG_SCROLL_STRATEGY","providedIn","factory","overlay","scrollStrategies","block","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","DIALOG_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","uniqueId","Dialog","openDialogs","_parentDialog","_openDialogsAtThisLevel","afterOpened","_afterOpenedAtThisLevel","_overlay","_injector","_defaultOptions","_overlayContainer","scrollStrategy","_afterAllClosedAtThisLevel","_ariaHiddenElements","Map","afterAllClosed","_getAfterAllClosed","pipe","_scrollStrategy","componentOrTemplateRef","defaults","getDialogById","overlayConfig","_getOverlayConfig","dialogRef","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","find","state","positionStrategy","position","global","centerHorizontally","centerVertically","direction","minWidth","minHeight","maxWidth","maxHeight","disposeOnNavigation","userInjector","injector","viewContainerRef","providers","useValue","containerType","container","containerPortal","parent","componentFactoryResolver","containerRef","attach","instance","_createInjector","context","templateContext","contentRef","componentRef","fallbackInjector","optional","change","emitEvent","forEach","previousValue","setAttribute","clear","overlayContainer","getContainerElement","parentElement","siblings","children","i","sibling","nodeName","hasAttribute","set","getAttribute","Dialog_Factory","ɵɵinject","OverlayContainer","ɵprov","ɵɵdefineInjectable","token","items","DialogModule","DialogModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","EventEmitter","ANIMATION_MODULE_TYPE","Directive","Input","coerceNumberProperty","merge","take","MatCommonModule","trigger","style","transition","animate","query","animateChild","MatDialogContainer_ng_template_2_Template","MatDialogConfig","delayFocusTrap","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","OPEN_ANIMATION_DURATION","CLOSE_ANIMATION_DURATION","MatDialogContainer","elementRef","focusTrapFactory","dialogConfig","interactivityChecker","ngZone","_animationMode","focusMonitor","_animationStateChanged","_animationsEnabled","_actionSectionCount","_hostElement","_enterAnimationDuration","parseCssTime","enterAnimationDuration","_exitAnimationDuration","exitAnimationDuration","_animationTimer","_finishDialogOpen","_clearAnimationClasses","_openAnimationDone","_finishDialogClose","emit","totalTime","_startOpenAnimation","setProperty","TRANSITION_DURATION_PROPERTY","_requestAnimationFrame","classList","add","_waitForAnimationToComplete","Promise","resolve","_startExitAnimation","remove","_updateActionSectionCount","delta","clearTimeout","setTimeout","requestAnimationFrame","ref","location","MatDialogContainer_Factory","MatDialogContainer_HostBindings","ɵɵhostProperty","ɵɵclassProp","MatDialogContainer_Template","time","endsWith","substring","MatDialogState","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_state","OPEN","_closeFallbackTimeout","_result","_closeDialogVia","dialogResult","detachBackdrop","CLOSING","afterClosed","beforeClosed","strategy","left","right","top","bottom","getState","CLOSED","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","dialogConfigClass","_dialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","cdkRef","cdkConfig","_closeDialogs","dialogs","MatDialog_Factory","Location","dialogElementUid","MatDialogClose","getClosestDialog","ngOnChanges","changes","proxiedChange","currentValue","_onButtonClick","screenX","screenY","MatDialogClose_Factory","ɵdir","ɵɵdefineDirective","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","inputs","ɵɵInputFlags","_matDialogClose","exportAs","ɵɵNgOnChangesFeature","MatDialogLayoutSection","_dialogRef","_onAdd","_onRemove","MatDialogLayoutSection_Factory","MatDialogTitle","arguments","ɵMatDialogTitle_BaseFactory","MatDialogTitle_Factory","ɵɵgetInheritedFactory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","ɵMatDialogActions_BaseFactory","MatDialogActions_Factory","MatDialogActions_HostBindings","align","DIRECTIVES","MatDialogModule_Factory","_defaultParams","params","matDialogAnimations","opacity","transform","numberAttribute","booleanAttribute","Output","ReplaySubject","MatTooltip","MatTooltipModule","MatPaginator_Conditional_2_Conditional_3_For_3_Template","pageSizeOption_r3","MatPaginator_Conditional_2_Conditional_3_Template","_r1","ɵɵgetCurrentView","MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener","ctx_r1","_changePageSize","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","_formFieldAppearance","color","pageSize","disabled","_pageSizeLabelId","selectConfig","disableOptionCentering","ɵɵrepeater","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","MatPaginator_Conditional_2_Template","_intl","itemsPerPageLabel","ɵɵconditional","MatPaginator_Conditional_6_Template","_r4","MatPaginator_Conditional_6_Template_button_click_0_listener","firstPage","ɵɵnamespaceSVG","firstPageLabel","_previousButtonsDisabled","MatPaginator_Conditional_13_Template","_r5","MatPaginator_Conditional_13_Template_button_click_0_listener","lastPage","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","startIndex","endIndex","MatPaginatorIntl_Factory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","nextUniqueId","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","map","_isInitialized","_initializedStream","hidePageSize","showFirstLastButtons","initialized","_intlChanges","formFieldAppearance","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","sort","a","b","MatPaginator_Factory","HasDecoratorInputTransform","outputs","ɵɵInputTransformsFeature","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","ɵɵnamespaceHTML","MatPaginator_Template_button_click_10_listener","OnPush","MatPaginatorModule_Factory","SPACE","ENTER","keyframes","AnimationDurations","AnimationCurves","_c1","MatSortHeader_Conditional_3_Template","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_start_0_listener","_disableViewStateAnimation","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_done_0_listener","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","_direction","sortables","_stateChanges","start","sortChange","register","sortable","has","deregister","delete","active","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","MatSort_Factory","alias","sortOrder","reverse","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_sort","_columnDef","_ariaDescriber","defaultOptions","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","ngAfterViewInit","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","removeDescription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","_getAriaSortAttribute","_renderArrow","newDescription","describe","MatSortHeader_Factory","AriaDescriber","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","attrs","ngContentSelectors","MatSortHeader_Template","ɵɵprojectionDef","ɵɵprojection","animation","animations","MatSortModule_Factory","takeUntil","coerceBooleanProperty","NgClass","normalizePassiveListenerOptions","CdkScrollableModule","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MAT_TOOLTIP_DEFAULT_OPTIONS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","passive","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","_position","_updatePosition","_tooltipInstance","show","positionAtOrigin","_positionAtOrigin","_detach","_disabled","hide","_setupPointerEnterEventsIfNeeded","_showDelay","_hideDelay","_mouseLeaveHideDelay","message","_message","String","_isTooltipVisible","_updateTooltipMessage","tooltipClass","_tooltipClass","_setTooltipClass","_scrollDispatcher","_viewContainerRef","_dir","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_viewportMargin","_cssClassPrefix","touchGestures","_passiveListeners","_destroyed","run","_touchstartTimeout","listener","delay","_cancelPendingAnimations","_createOverlay","_portal","_triggerElement","afterHidden","isVisible","toggle","existingStrategy","getConfig","_origin","scrollableAncestors","getAncestorScrollContainers","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","_handleBodyInteraction","disableTooltipInteractivity","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","offset","isLtr","originY","offsetY","originX","offsetX","originPosition","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","point","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","DEFAULT_LONGPRESS_DELAY","touchLongPressShowDelay","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","_wheelListener","touchendListener","listeners","IOS","ANDROID","elementUnderPointer","elementFromPoint","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","MatTooltip_Factory","ScrollDispatcher","ViewContainerRef","MatTooltip_HostBindings","animationMode","_isMultiline","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","_animationsDisabled","_hideTimeoutId","_showTimeoutId","_toggleVisibility","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","rect","getBoundingClientRect","_handleAnimationEnd","animationName","toVisible","tooltip","_tooltip","showClass","hideClass","getComputedStyle","getPropertyValue","TooltipComponent_Factory","TooltipComponent_Query","TooltipComponent_HostBindings","TooltipComponent_mouseleave_HostBindingHandler","ɵɵstyleProp","TooltipComponent_Template","TooltipComponent_Template_div_animationend_0_listener","matTooltipAnimations","tooltipState","MatTooltipModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[2,3,4,5,6]}