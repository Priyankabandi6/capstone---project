{"version":3,"file":"src_app_components_audit_audit_component_ts.js","mappings":"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","sources":["./src/app/components/audit/audit.component.ts","./src/app/components/audit/audit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-audit',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n  templateUrl: './audit.component.html',\r\n  styleUrl: './audit.component.scss'\r\n})\r\nexport class AuditComponent implements OnInit {\r\n  \r\n  displayedColumns: string[] = ['timestamp', 'user', 'action', 'module', 'details', 'ipAddress', 'status'];\r\n  dataSource: any[] = [];\r\n  filteredDataSource: any[] = [];\r\n  \r\n  searchTerm = '';\r\n  selectedModule = '';\r\n  selectedStatus = '';\r\n  startDate: Date | null = null;\r\n  endDate: Date | null = null;\r\n\r\n  modules = ['All', 'Patients', 'Doctors', 'Appointments', 'Billing', 'System', 'Authentication'];\r\n  statuses = ['All', 'Success', 'Failed', 'Warning', 'Info'];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAuditLogs();\r\n  }\r\n\r\n  loadAuditLogs(): void {\r\n    // Mock data - replace with actual API call\r\n    this.dataSource = [\r\n      { timestamp: '2024-01-15 09:30:15', user: 'admin@hospital.com', action: 'Login', module: 'Authentication', details: 'User logged in successfully', ipAddress: '192.168.1.100', status: 'Success' },\r\n      { timestamp: '2024-01-15 09:35:22', user: 'admin@hospital.com', action: 'Create Patient', module: 'Patients', details: 'New patient John Doe added', ipAddress: '192.168.1.100', status: 'Success' },\r\n      { timestamp: '2024-01-15 10:15:45', user: 'doctor.smith@hospital.com', action: 'View Patient Records', module: 'Patients', details: 'Accessed patient records for Jane Smith', ipAddress: '192.168.1.101', status: 'Success' },\r\n      { timestamp: '2024-01-15 11:20:33', user: 'nurse.johnson@hospital.com', action: 'Update Appointment', module: 'Appointments', details: 'Modified appointment time for Mike Wilson', ipAddress: '192.168.1.102', status: 'Success' },\r\n      { timestamp: '2024-01-15 14:05:18', user: 'admin@hospital.com', action: 'Delete Record', module: 'System', details: 'Attempted to delete system configuration', ipAddress: '192.168.1.100', status: 'Failed' },\r\n      { timestamp: '2024-01-15 16:30:55', user: 'billing@hospital.com', action: 'Generate Invoice', module: 'Billing', details: 'Invoice #INV-001 generated for Sarah Davis', ipAddress: '192.168.1.103', status: 'Success' }\r\n    ];\r\n    this.filteredDataSource = [...this.dataSource];\r\n  }\r\n\r\n  applyFilter(): void {\r\n    let filtered = [...this.dataSource];\r\n\r\n    // Text search\r\n    if (this.searchTerm.trim()) {\r\n      filtered = filtered.filter(log =>\r\n        log.user.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        log.action.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        log.details.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        log.ipAddress.includes(this.searchTerm)\r\n      );\r\n    }\r\n\r\n    // Module filter\r\n    if (this.selectedModule && this.selectedModule !== 'All') {\r\n      filtered = filtered.filter(log => log.module === this.selectedModule);\r\n    }\r\n\r\n    // Status filter\r\n    if (this.selectedStatus && this.selectedStatus !== 'All') {\r\n      filtered = filtered.filter(log => log.status === this.selectedStatus);\r\n    }\r\n\r\n    // Date range filter\r\n    if (this.startDate) {\r\n      filtered = filtered.filter(log => {\r\n        const logDate = new Date(log.timestamp);\r\n        return logDate >= this.startDate!;\r\n      });\r\n    }\r\n\r\n    if (this.endDate) {\r\n      filtered = filtered.filter(log => {\r\n        const logDate = new Date(log.timestamp);\r\n        return logDate <= this.endDate!;\r\n      });\r\n    }\r\n\r\n    this.filteredDataSource = filtered;\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.searchTerm = '';\r\n    this.selectedModule = '';\r\n    this.selectedStatus = '';\r\n    this.startDate = null;\r\n    this.endDate = null;\r\n    this.filteredDataSource = [...this.dataSource];\r\n  }\r\n\r\n  exportLogs(): void {\r\n    // Mock export functionality\r\n    const csvContent = this.convertToCSV(this.filteredDataSource);\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'audit_logs.csv';\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  private convertToCSV(data: any[]): string {\r\n    const headers = ['Timestamp', 'User', 'Action', 'Module', 'Details', 'IP Address', 'Status'];\r\n    const csvRows = [headers.join(',')];\r\n    \r\n    data.forEach(row => {\r\n      const values = [\r\n        row.timestamp,\r\n        row.user,\r\n        row.action,\r\n        row.module,\r\n        `\"${row.details}\"`,\r\n        row.ipAddress,\r\n        row.status\r\n      ];\r\n      csvRows.push(values.join(','));\r\n    });\r\n    \r\n    return csvRows.join('\\n');\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'Success': return 'success';\r\n      case 'Failed': return 'warn';\r\n      case 'Warning': return 'accent';\r\n      case 'Info': return 'primary';\r\n      default: return 'primary';\r\n    }\r\n  }\r\n\r\n  getModuleColor(module: string): string {\r\n    const colors = ['primary', 'accent', 'warn', 'success'];\r\n    const index = this.modules.indexOf(module);\r\n    return colors[index % colors.length];\r\n  }\r\n\r\n  refreshLogs(): void {\r\n    this.loadAuditLogs();\r\n    this.applyFilter();\r\n  }\r\n\r\n  getStatsCount(status: string): number {\r\n    if (status === 'All') {\r\n      return this.dataSource.length;\r\n    }\r\n    return this.dataSource.filter(log => log.status === status).length;\r\n  }\r\n\r\n  getStatusIcon(status: string): string {\r\n    switch (status) {\r\n      case 'Success': return 'check_circle';\r\n      case 'Failed': return 'error';\r\n      case 'Warning': return 'warning';\r\n      case 'Info': return 'info';\r\n      default: return 'help';\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"audit-container\">\r\n  <!-- Header Section -->\r\n  <div class=\"audit-header\">\r\n    <div class=\"header-content\">\r\n      <div class=\"title-section\">\r\n        <h1 class=\"page-title\">\r\n          <mat-icon class=\"title-icon\">security</mat-icon>\r\n          Audit Logs\r\n        </h1>\r\n        <p class=\"page-subtitle\">Monitor system activity and user actions across all modules</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"exportLogs()\" class=\"export-btn\">\r\n          <mat-icon>download</mat-icon>\r\n          Export Logs\r\n        </button>\r\n        <button mat-raised-button color=\"accent\" (click)=\"refreshLogs()\" class=\"refresh-btn\">\r\n          <mat-icon>refresh</mat-icon>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filters Section -->\r\n  <mat-card class=\"filters-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <mat-icon>filter_list</mat-icon>\r\n        Filters & Search\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"filters-grid\">\r\n        <!-- Search Input -->\r\n        <mat-form-field class=\"search-field\" appearance=\"outline\">\r\n          <mat-label>Search logs...</mat-label>\r\n          <input matInput [(ngModel)]=\"searchTerm\" placeholder=\"Search by user, action, details, or IP\" (input)=\"applyFilter()\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <!-- Module Filter -->\r\n        <mat-form-field class=\"filter-field\" appearance=\"outline\">\r\n          <mat-label>Module</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedModule\" (selectionChange)=\"applyFilter()\">\r\n            <mat-option *ngFor=\"let module of modules\" [value]=\"module\">\r\n              {{ module }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Status Filter -->\r\n        <mat-form-field class=\"filter-field\" appearance=\"outline\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedStatus\" (selectionChange)=\"applyFilter()\">\r\n            <mat-option *ngFor=\"let status of statuses\" [value]=\"status\">\r\n              {{ status }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Date Range Filters -->\r\n        <mat-form-field class=\"filter-field\" appearance=\"outline\">\r\n          <mat-label>Start Date</mat-label>\r\n          <input matInput [matDatepicker]=\"startPicker\" [(ngModel)]=\"startDate\" (dateChange)=\"applyFilter()\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #startPicker></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"filter-field\" appearance=\"outline\">\r\n          <mat-label>End Date</mat-label>\r\n          <input matInput [matDatepicker]=\"endPicker\" [(ngModel)]=\"endDate\" (dateChange)=\"applyFilter()\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #endPicker></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <!-- Action Buttons -->\r\n        <div class=\"filter-actions\">\r\n          <button mat-stroked-button color=\"warn\" (click)=\"clearFilters()\" class=\"clear-btn\">\r\n            <mat-icon>clear</mat-icon>\r\n            Clear Filters\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <!-- Statistics Cards -->\r\n  <div class=\"stats-grid\">\r\n    <mat-card class=\"stat-card\">\r\n      <mat-card-content>\r\n        <div class=\"stat-content\">\r\n          <mat-icon class=\"stat-icon success\">check_circle</mat-icon>\r\n          <div class=\"stat-details\">\r\n            <span class=\"stat-number\">{{ getStatsCount('Success') }}</span>\r\n            <span class=\"stat-label\">Successful Actions</span>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"stat-card\">\r\n      <mat-card-content>\r\n        <div class=\"stat-content\">\r\n          <mat-icon class=\"stat-icon warn\">error</mat-icon>\r\n          <div class=\"stat-details\">\r\n            <span class=\"stat-number\">{{ getStatsCount('Failed') }}</span>\r\n            <span class=\"stat-label\">Failed Actions</span>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"stat-card\">\r\n      <mat-card-content>\r\n        <div class=\"stat-content\">\r\n          <mat-icon class=\"stat-icon accent\">warning</mat-icon>\r\n          <div class=\"stat-details\">\r\n            <span class=\"stat-number\">{{ getStatsCount('Warning') }}</span>\r\n            <span class=\"stat-label\">Warnings</span>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"stat-card\">\r\n      <mat-card-content>\r\n        <div class=\"stat-content\">\r\n          <mat-icon class=\"stat-icon primary\">info</mat-icon>\r\n          <div class=\"stat-details\">\r\n            <span class=\"stat-number\">{{ getStatsCount('Info') }}</span>\r\n            <span class=\"stat-label\">Info Logs</span>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <!-- Data Table -->\r\n  <mat-card class=\"table-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <mat-icon>table_chart</mat-icon>\r\n        Audit Logs\r\n        <span class=\"record-count\">({{ filteredDataSource.length }} records)</span>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"table-container\">\r\n        <table mat-table [dataSource]=\"filteredDataSource\" class=\"audit-table\">\r\n          <!-- Timestamp Column -->\r\n          <ng-container matColumnDef=\"timestamp\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-icon>schedule</mat-icon>\r\n              Timestamp\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let log\">\r\n              <div class=\"timestamp-cell\">\r\n                <span class=\"date\">{{ log.timestamp | date:'MMM dd, yyyy' }}</span>\r\n                <span class=\"time\">{{ log.timestamp | date:'HH:mm:ss' }}</span>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- User Column -->\r\n          <ng-container matColumnDef=\"user\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-icon>person</mat-icon>\r\n              User\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let log\">\r\n              <div class=\"user-cell\">\r\n                <mat-icon class=\"user-icon\">account_circle</mat-icon>\r\n                <span class=\"user-email\">{{ log.user }}</span>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Action Column -->\r\n          <ng-container matColumnDef=\"action\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-icon>touch_app</mat-icon>\r\n              Action\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let log\">\r\n              <span class=\"action-text\">{{ log.action }}</span>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Module Column -->\r\n          <ng-container matColumnDef=\"module\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-icon>category</mat-icon>\r\n              Module\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let log\">\r\n              <mat-chip [color]=\"getModuleColor(log.module)\" selected class=\"module-chip\">\r\n                {{ log.module }}\r\n              </mat-chip>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Details Column -->\r\n          <ng-container matColumnDef=\"details\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-icon>description</mat-icon>\r\n              Details\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let log\">\r\n              <div class=\"details-cell\">\r\n                <span class=\"details-text\" [title]=\"log.details\">{{ log.details }}</span>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- IP Address Column -->\r\n          <ng-container matColumnDef=\"ipAddress\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-icon>router</mat-icon>\r\n              IP Address\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let log\">\r\n              <code class=\"ip-address\">{{ log.ipAddress }}</code>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Status Column -->\r\n          <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-icon>flag</mat-icon>\r\n              Status\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let log\">\r\n              <mat-chip [color]=\"getStatusColor(log.status)\" selected class=\"status-chip\">\r\n                <mat-icon class=\"status-icon\">{{ getStatusIcon(log.status) }}</mat-icon>\r\n                {{ log.status }}\r\n              </mat-chip>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <!-- No Data Message -->\r\n        <div *ngIf=\"filteredDataSource.length === 0\" class=\"no-data\">\r\n          <mat-icon class=\"no-data-icon\">search_off</mat-icon>\r\n          <h3>No audit logs found</h3>\r\n          <p>Try adjusting your filters or search criteria</p>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n"],"names":["CommonModule","FormsModule","MatCardModule","MatTableModule","MatButtonModule","MatIconModule","MatInputModule","MatFormFieldModule","MatSelectModule","MatChipsModule","MatDatepickerModule","MatNativeDateModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","module_r2","ɵɵadvance","ɵɵtextInterpolate1","status_r3","ɵɵtextInterpolate","ɵɵpipeBind2","log_r4","timestamp","log_r5","user","log_r6","action","ctx_r7","getModuleColor","log_r7","module","log_r9","details","log_r10","ipAddress","getStatusColor","log_r11","status","getStatusIcon","ɵɵelement","AuditComponent","constructor","displayedColumns","dataSource","filteredDataSource","searchTerm","selectedModule","selectedStatus","startDate","endDate","modules","statuses","ngOnInit","loadAuditLogs","applyFilter","filtered","trim","filter","log","toLowerCase","includes","logDate","Date","clearFilters","exportLogs","csvContent","convertToCSV","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","data","headers","csvRows","join","forEach","row","values","push","colors","index","indexOf","length","refreshLogs","getStatsCount","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AuditComponent_Template","rf","ctx","ɵɵlistener","AuditComponent_Template_button_click_11_listener","ɵɵrestoreView","_r1","ɵɵresetView","AuditComponent_Template_button_click_15_listener","ɵɵtwoWayListener","AuditComponent_Template_input_ngModelChange_30_listener","$event","ɵɵtwoWayBindingSet","AuditComponent_Template_input_input_30_listener","AuditComponent_Template_mat_select_ngModelChange_36_listener","AuditComponent_Template_mat_select_selectionChange_36_listener","ɵɵtemplate","AuditComponent_mat_option_37_Template","AuditComponent_Template_mat_select_ngModelChange_41_listener","AuditComponent_Template_mat_select_selectionChange_41_listener","AuditComponent_mat_option_42_Template","AuditComponent_Template_input_ngModelChange_46_listener","AuditComponent_Template_input_dateChange_46_listener","AuditComponent_Template_input_ngModelChange_53_listener","AuditComponent_Template_input_dateChange_53_listener","AuditComponent_Template_button_click_58_listener","ɵɵelementContainerStart","AuditComponent_th_115_Template","AuditComponent_td_116_Template","AuditComponent_th_118_Template","AuditComponent_td_119_Template","AuditComponent_th_121_Template","AuditComponent_td_122_Template","AuditComponent_th_124_Template","AuditComponent_td_125_Template","AuditComponent_th_127_Template","AuditComponent_td_128_Template","AuditComponent_th_130_Template","AuditComponent_td_131_Template","AuditComponent_th_133_Template","AuditComponent_td_134_Template","AuditComponent_tr_135_Template","AuditComponent_tr_136_Template","AuditComponent_div_137_Template","ɵɵtwoWayProperty","startPicker_r12","endPicker_r13","i1","NgForOf","NgIf","DatePipe","i2","DefaultValueAccessor","NgControlStatus","NgModel","i3","MatCard","MatCardContent","MatCardHeader","MatCardTitle","i4","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i5","MatButton","i6","MatIcon","i7","MatInput","i8","MatFormField","MatLabel","MatSuffix","i9","MatSelect","i10","MatOption","i11","MatChip","i12","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}