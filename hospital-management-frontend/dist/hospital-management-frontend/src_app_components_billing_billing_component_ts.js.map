{"version":3,"file":"src_app_components_billing_billing_component_ts.js","mappings":"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","sources":["./src/app/components/billing/billing.component.ts","./src/app/components/billing/billing.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-billing',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatMenuModule\r\n  ],\r\n  templateUrl: './billing.component.html',\r\n  styleUrl: './billing.component.scss'\r\n})\r\nexport class BillingComponent implements OnInit {\r\n  \r\n  displayedColumns: string[] = ['id', 'patient', 'services', 'amount', 'status', 'date', 'actions'];\r\n  dataSource: any[] = [];\r\n  filteredDataSource: any[] = [];\r\n  \r\n  billingForm: FormGroup;\r\n  isAddMode = false;\r\n  selectedBill: any = null;\r\n  searchTerm = '';\r\n\r\n  paymentStatuses = ['Pending', 'Paid', 'Overdue', 'Cancelled'];\r\n  serviceTypes = ['Consultation', 'Laboratory', 'Radiology', 'Surgery', 'Medication', 'Room Charges'];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.billingForm = this.fb.group({\r\n      patientId: ['', Validators.required],\r\n      services: ['', Validators.required],\r\n      amount: ['', [Validators.required, Validators.min(0)]],\r\n      status: ['Pending'],\r\n      dueDate: [''],\r\n      notes: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadBills();\r\n  }\r\n\r\n  loadBills(): void {\r\n    // Mock data - replace with actual API call\r\n    this.dataSource = [\r\n      { id: 1, patient: 'John Doe', services: 'Consultation, Laboratory', amount: 250.00, status: 'Paid', date: '2024-01-15', dueDate: '2024-01-15', notes: 'Regular checkup and blood tests' },\r\n      { id: 2, patient: 'Jane Smith', services: 'Surgery, Room Charges', amount: 2500.00, status: 'Pending', date: '2024-01-14', dueDate: '2024-01-21', notes: 'Appendectomy surgery' },\r\n      { id: 3, patient: 'Mike Wilson', services: 'Radiology, Consultation', amount: 180.00, status: 'Overdue', date: '2024-01-10', dueDate: '2024-01-10', notes: 'X-ray and consultation' },\r\n      { id: 4, patient: 'Sarah Davis', services: 'Medication, Follow-up', amount: 95.00, status: 'Paid', date: '2024-01-12', dueDate: '2024-01-12', notes: 'Prescription refill' }\r\n    ];\r\n    this.filteredDataSource = [...this.dataSource];\r\n  }\r\n\r\n  applyFilter(): void {\r\n    if (!this.searchTerm.trim()) {\r\n      this.filteredDataSource = [...this.dataSource];\r\n      return;\r\n    }\r\n    \r\n    this.filteredDataSource = this.dataSource.filter(bill =>\r\n      bill.patient.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n      bill.services.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n      bill.status.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n    );\r\n  }\r\n\r\n  openAddDialog(): void {\r\n    this.isAddMode = true;\r\n    this.selectedBill = null;\r\n    this.billingForm.reset();\r\n    this.billingForm.patchValue({ status: 'Pending' });\r\n  }\r\n\r\n  openEditDialog(bill: any): void {\r\n    this.isAddMode = false;\r\n    this.selectedBill = bill;\r\n    this.billingForm.patchValue(bill);\r\n  }\r\n\r\n  saveBill(): void {\r\n    if (this.billingForm.valid) {\r\n      const billData = this.billingForm.value;\r\n      \r\n      if (this.isAddMode) {\r\n        // Add new bill\r\n        const newBill = {\r\n          ...billData,\r\n          id: this.dataSource.length + 1,\r\n          date: new Date().toISOString().split('T')[0]\r\n        };\r\n        this.dataSource.push(newBill);\r\n        this.snackBar.open('Bill generated successfully!', 'Close', { duration: 3000 });\r\n      } else {\r\n        // Update existing bill\r\n        const index = this.dataSource.findIndex(b => b.id === this.selectedBill.id);\r\n        if (index !== -1) {\r\n          this.dataSource[index] = { ...this.selectedBill, ...billData };\r\n          this.snackBar.open('Bill updated successfully!', 'Close', { duration: 3000 });\r\n        }\r\n      }\r\n      \r\n      this.loadBills();\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n  deleteBill(bill: any): void {\r\n    if (confirm(`Are you sure you want to delete this bill?`)) {\r\n      const index = this.dataSource.findIndex(b => b.id === bill.id);\r\n      if (index !== -1) {\r\n        this.dataSource.splice(index, 1);\r\n        this.loadBills();\r\n        this.snackBar.open('Bill deleted successfully!', 'Close', { duration: 3000 });\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.selectedBill = null;\r\n    this.billingForm.reset();\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'Paid': return 'success';\r\n      case 'Pending': return 'primary';\r\n      case 'Overdue': return 'warn';\r\n      case 'Cancelled': return 'warn';\r\n      default: return 'primary';\r\n    }\r\n  }\r\n\r\n  generateInvoice(bill: any): void {\r\n    // Mock invoice generation\r\n    this.snackBar.open(`Invoice generated for ${bill.patient}`, 'Close', { duration: 3000 });\r\n  }\r\n\r\n  markAsPaid(bill: any): void {\r\n    const index = this.dataSource.findIndex(b => b.id === bill.id);\r\n    if (index !== -1) {\r\n      this.dataSource[index].status = 'Paid';\r\n      this.loadBills();\r\n      this.snackBar.open(`Payment recorded for ${bill.patient}`, 'Close', { duration: 3000 });\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"billing-container\">\r\n  <h1>Billing Management</h1>\r\n  <p>Generate invoices and track payments</p>\r\n</div>\r\n\r\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","MatCardModule","MatTableModule","MatButtonModule","MatIconModule","MatInputModule","MatFormFieldModule","MatSelectModule","MatChipsModule","MatMenuModule","BillingComponent","constructor","fb","snackBar","displayedColumns","dataSource","filteredDataSource","isAddMode","selectedBill","searchTerm","paymentStatuses","serviceTypes","billingForm","group","patientId","required","services","amount","min","status","dueDate","notes","ngOnInit","loadBills","id","patient","date","applyFilter","trim","filter","bill","toLowerCase","includes","openAddDialog","reset","patchValue","openEditDialog","saveBill","valid","billData","value","newBill","length","Date","toISOString","split","push","open","duration","index","findIndex","b","closeDialog","deleteBill","confirm","splice","getStatusColor","generateInvoice","markAsPaid","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","MatSnackBar","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BillingComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}