{"version":3,"file":"src_app_components_appointments_appointments_component_ts.js","mappings":"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","sources":["./src/app/components/appointments/appointments.component.ts","./src/app/components/appointments/appointments.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-appointments',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatMenuModule\r\n  ],\r\n  templateUrl: './appointments.component.html',\r\n  styleUrl: './appointments.component.scss'\r\n})\r\nexport class AppointmentsComponent implements OnInit {\r\n  \r\n  displayedColumns: string[] = ['id', 'patient', 'doctor', 'date', 'time', 'type', 'status', 'actions'];\r\n  dataSource: any[] = [];\r\n  filteredDataSource: any[] = [];\r\n  \r\n  appointmentForm: FormGroup;\r\n  isAddMode = false;\r\n  selectedAppointment: any = null;\r\n  searchTerm = '';\r\n\r\n  appointmentTypes = ['Consultation', 'Follow-up', 'Emergency', 'Surgery', 'Check-up'];\r\n  appointmentStatuses = ['Scheduled', 'Confirmed', 'In Progress', 'Completed', 'Cancelled'];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.appointmentForm = this.fb.group({\r\n      patientId: ['', Validators.required],\r\n      doctorId: ['', Validators.required],\r\n      date: ['', Validators.required],\r\n      time: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      notes: [''],\r\n      status: ['Scheduled']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAppointments();\r\n  }\r\n\r\n  loadAppointments(): void {\r\n    // Mock data - replace with actual API call\r\n    this.dataSource = [\r\n      { id: 1, patient: 'John Doe', doctor: 'Dr. Smith', date: '2024-01-15', time: '09:00 AM', type: 'Consultation', status: 'Confirmed', notes: 'Regular checkup' },\r\n      { id: 2, patient: 'Jane Smith', doctor: 'Dr. Johnson', date: '2024-01-15', time: '10:30 AM', type: 'Follow-up', status: 'Scheduled', notes: 'Post-surgery follow-up' },\r\n      { id: 3, patient: 'Mike Wilson', doctor: 'Dr. Brown', date: '2024-01-15', time: '02:00 PM', type: 'Emergency', status: 'In Progress', notes: 'Chest pain' },\r\n      { id: 4, patient: 'Sarah Davis', doctor: 'Dr. Wilson', date: '2024-01-16', time: '11:00 AM', type: 'Check-up', status: 'Scheduled', notes: 'Annual physical' }\r\n    ];\r\n    this.filteredDataSource = [...this.dataSource];\r\n  }\r\n\r\n  applyFilter(): void {\r\n    if (!this.searchTerm.trim()) {\r\n      this.filteredDataSource = [...this.dataSource];\r\n      return;\r\n    }\r\n    \r\n    this.filteredDataSource = this.dataSource.filter(appointment =>\r\n      appointment.patient.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n      appointment.doctor.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n      appointment.type.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n    );\r\n  }\r\n\r\n  openAddDialog(): void {\r\n    this.isAddMode = true;\r\n    this.selectedAppointment = null;\r\n    this.appointmentForm.reset();\r\n    this.appointmentForm.patchValue({ status: 'Scheduled' });\r\n  }\r\n\r\n  openEditDialog(appointment: any): void {\r\n    this.isAddMode = false;\r\n    this.selectedAppointment = appointment;\r\n    this.appointmentForm.patchValue(appointment);\r\n  }\r\n\r\n  saveAppointment(): void {\r\n    if (this.appointmentForm.valid) {\r\n      const appointmentData = this.appointmentForm.value;\r\n      \r\n      if (this.isAddMode) {\r\n        // Add new appointment\r\n        const newAppointment = {\r\n          ...appointmentData,\r\n          id: this.dataSource.length + 1\r\n        };\r\n        this.dataSource.push(newAppointment);\r\n        this.snackBar.open('Appointment scheduled successfully!', 'Close', { duration: 3000 });\r\n      } else {\r\n        // Update existing appointment\r\n        const index = this.dataSource.findIndex(a => a.id === this.selectedAppointment.id);\r\n        if (index !== -1) {\r\n          this.dataSource[index] = { ...this.selectedAppointment, ...appointmentData };\r\n          this.snackBar.open('Appointment updated successfully!', 'Close', { duration: 3000 });\r\n        }\r\n      }\r\n      \r\n      this.loadAppointments();\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n  deleteAppointment(appointment: any): void {\r\n    if (confirm(`Are you sure you want to delete this appointment?`)) {\r\n      const index = this.dataSource.findIndex(a => a.id === appointment.id);\r\n      if (index !== -1) {\r\n        this.dataSource.splice(index, 1);\r\n        this.loadAppointments();\r\n        this.snackBar.open('Appointment deleted successfully!', 'Close', { duration: 3000 });\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.selectedAppointment = null;\r\n    this.appointmentForm.reset();\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'Confirmed': return 'success';\r\n      case 'Scheduled': return 'primary';\r\n      case 'In Progress': return 'accent';\r\n      case 'Completed': return 'success';\r\n      case 'Cancelled': return 'warn';\r\n      default: return 'primary';\r\n    }\r\n  }\r\n\r\n  getTypeColor(type: string): string {\r\n    switch (type) {\r\n      case 'Emergency': return 'warn';\r\n      case 'Surgery': return 'accent';\r\n      case 'Consultation': return 'primary';\r\n      case 'Follow-up': return 'success';\r\n      case 'Check-up': return 'primary';\r\n      default: return 'primary';\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"appointments-container\">\r\n  <h1>Appointments Management</h1>\r\n  <p>Schedule and manage patient appointments</p>\r\n</div>\r\n\r\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","MatCardModule","MatTableModule","MatButtonModule","MatIconModule","MatInputModule","MatFormFieldModule","MatSelectModule","MatDatepickerModule","MatNativeDateModule","MatChipsModule","MatMenuModule","AppointmentsComponent","constructor","fb","snackBar","displayedColumns","dataSource","filteredDataSource","isAddMode","selectedAppointment","searchTerm","appointmentTypes","appointmentStatuses","appointmentForm","group","patientId","required","doctorId","date","time","type","notes","status","ngOnInit","loadAppointments","id","patient","doctor","applyFilter","trim","filter","appointment","toLowerCase","includes","openAddDialog","reset","patchValue","openEditDialog","saveAppointment","valid","appointmentData","value","newAppointment","length","push","open","duration","index","findIndex","a","closeDialog","deleteAppointment","confirm","splice","getStatusColor","getTypeColor","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","MatSnackBar","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppointmentsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}